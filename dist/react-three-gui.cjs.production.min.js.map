{"version":3,"file":"react-three-gui.cjs.production.min.js","sources":["../src/contexts/controls-context.ts","../src/components/controls-provider.tsx","../src/types.ts","../src/utils.ts","../src/components/controls/base-control.tsx","../src/components/controls/number-control.tsx","../src/components/controls/boolean-control.tsx","../src/components/controls/button-control.tsx","../src/components/controls/color-control.tsx","../src/components/controls/select-control.tsx","../src/components/controls/string-control.tsx","../src/components/controls/file-control.tsx","../src/components/control-item.tsx","../src/components/controls/xy-pad-control.tsx","../src/components/control-group.tsx","../src/components/controls.tsx","../src/hooks/use-control.ts"],"sourcesContent":["import { createContext, RefObject, SetStateAction } from 'react';\nimport { ControlItem } from 'types';\n\ninterface IControlsContext {\n  values: RefObject<Map<string, any>>;\n  gui: RefObject<Map<string, SetStateAction<any>>>;\n  state: RefObject<Map<string, SetStateAction<any>>>;\n  controls: ControlItem[];\n  addControl(control: ControlItem): ControlItem;\n  removeControl(control: ControlItem): any;\n}\n\nexport const ControlsContext = createContext<IControlsContext>({\n  values: { current: new Map() },\n  gui: { current: new Map() },\n  state: { current: new Map() },\n  controls: [],\n  addControl(control: ControlItem) {\n    return control;\n  },\n  removeControl() {},\n});\n","import React, { useState, useRef } from 'react';\nimport { ControlsContext } from '../contexts/controls-context';\nimport { Canvas as R3FCanvas } from 'react-three-fiber';\nimport { ControlItem } from 'types';\n\nexport const ControlsProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const [controls, setControls] = useState<ControlItem[]>([]);\n  // Persist values between reloads\n  const values = useRef(new Map());\n  // GUI control state setters\n  const gui = useRef(new Map());\n  // useControl state setters\n  const state = useRef(new Map());\n\n  const context = {\n    values,\n    gui,\n    state,\n    controls,\n    addControl: (control: ControlItem) => {\n      control.id = control.id ?? String(Math.random());\n      setControls(ctrls => {\n        return [...ctrls, control];\n      });\n      return control;\n    },\n    removeControl: (ctrl: ControlItem) => {\n      setControls(ctrls => ctrls.filter(c => c.id !== ctrl.id));\n    },\n  };\n\n  return (\n    <ControlsContext.Provider value={context}>\n      {children}\n    </ControlsContext.Provider>\n  );\n};\n\nexport function withControls(CanvasEl: typeof R3FCanvas) {\n  return ({ children, ...props }: any) => (\n    <ControlsContext.Consumer>\n      {value => (\n        <CanvasEl {...props}>\n          <ControlsContext.Provider value={value}>\n            {children}\n          </ControlsContext.Provider>\n        </CanvasEl>\n      )}\n    </ControlsContext.Consumer>\n  );\n}\n\nexport const Canvas = withControls(R3FCanvas);\n","import { Dispatch, SetStateAction, MouseEvent } from 'react';\nimport { SpringConfig } from '@react-spring/three';\n\nexport const DEFAULT_GROUP = 'DEFAULT_GROUP';\n\nexport type ControlItem = {\n  id: string;\n  name: string;\n  value: any;\n  options: ControlOptions;\n};\n\nexport enum ControlType {\n  NUMBER = 'number',\n  STRING = 'string',\n  BUTTON = 'button',\n  BOOLEAN = 'boolean',\n  SELECT = 'select',\n  COLOR = 'color',\n  XYPAD = 'xypad',\n  FILE = 'file',\n  CUSTOM = 'custom',\n}\n\nexport type ControlComponentProps<T> = ControlItem & {\n  setValue(value: any): void;\n  options: T;\n};\n\nexport type ControlOptionsBase = {\n  /** Unique id for control */\n  id?: string;\n  /* The control type */\n  type: ControlType | string;\n  /** Default value */\n  value?: any;\n  /* Return useSpring instead of useState */\n  spring?: boolean | SpringConfig;\n  /* Group this control */\n  group?: string;\n  /* Use your own state */\n  state?: [any, Dispatch<SetStateAction<any>>];\n  /* onChange callback */\n  onChange?(value: any): void;\n};\n\nexport type ControlOptionsNumber = {\n  type: ControlType.NUMBER | 'number';\n  /* Minimum value */\n  min?: number;\n  /* Maximum value */\n  max?: number;\n  /* Initial value */\n  value?: number;\n  /* Slider distance */\n  distance?: number;\n  /* Scrub value in both directions */\n  scrub?: boolean;\n};\n\nexport type ControlOptionsString = {\n  type: ControlType.STRING | 'string';\n  /* Initial value */\n  value?: string;\n};\n\nexport type ControlOptionsFile = {\n  type: ControlType.FILE | 'file';\n  /* Initial value */\n  value?: string;\n  /** Loader */\n  loader?: {\n    load(url: string): any;\n  };\n};\n\nexport type ControlOptionsButton = {\n  type: ControlType.BUTTON | 'button';\n  /* Fired on button click */\n  onClick?(e: MouseEvent<HTMLButtonElement>): any;\n};\n\nexport type ControlOptionsBoolean = {\n  type: ControlType.BOOLEAN | 'boolean';\n  value?: boolean;\n};\n\nexport type ControlOptionsSelect = {\n  type: ControlType.SELECT | 'select';\n  /* List of items to select from */\n  items: string[];\n  /* Initial value */\n  value?: string;\n};\n\nexport type ControlOptionsColor = {\n  type: ControlType.COLOR | 'color';\n  /* Initial value as HEX code */\n  value?: string;\n  /* Show picker as inline */\n  inline?: boolean;\n  /* What kind of picker. Default Chrome */\n  picker?:\n    | 'chrome'\n    | 'sketch'\n    | 'hue'\n    | 'alpha'\n    | 'block'\n    | 'github'\n    | 'twitter'\n    | 'circle'\n    | 'material'\n    | 'compact'\n    | 'slider'\n    | 'swatches';\n  /* Disable alpha */\n  disableAlpha?: boolean;\n  /* Custom set of colors */\n  colors?: string[];\n};\n\nexport type ControlOptionsXYPad = {\n  type: ControlType.XYPAD | 'xypad';\n  /* Initial value as { x, y } object */\n  value?: { x: number; y: number };\n  /* Pad drag distance */\n  distance?: number;\n  /* Scrub value in both directions */\n  scrub?: boolean;\n};\n\nexport type ControlOptionsCustom = {\n  type: ControlType.CUSTOM | 'custom';\n  /* Custom React component */\n  component?: any;\n};\n\nexport type ControlOptions = ControlOptionsBase &\n  (\n    | ControlOptionsCustom\n    | ControlOptionsNumber\n    | ControlOptionsBoolean\n    | ControlOptionsString\n    | ControlOptionsButton\n    | ControlOptionsColor\n    | ControlOptionsSelect\n    | ControlOptionsFile\n    | ControlOptionsXYPad\n  );\n","import { ControlOptions, ControlType } from './types';\nimport * as THREE from 'three';\n\nexport const defaultOptions: ControlOptions = {\n  type: ControlType.NUMBER,\n  value: 0,\n};\n\nexport const defaultValue = (options: ControlOptions) => {\n  if (options.hasOwnProperty('value')) {\n    return options.value;\n  }\n\n  switch (options.type) {\n    case ControlType.NUMBER:\n      return 0;\n    case ControlType.COLOR:\n      return '#ff0000';\n    case ControlType.STRING:\n      return '';\n    case ControlType.SELECT:\n      return (options.items || [''])[0];\n    case ControlType.BOOLEAN:\n      return false;\n    case ControlType.FILE:\n      return new THREE.FileLoader();\n    case ControlType.XYPAD:\n      return { x: 0, y: 0 };\n  }\n\n  return undefined;\n};\n\nexport const clamp = (num: number, clamp: number, higher?: number) =>\n  higher !== undefined\n    ? Math.min(Math.max(num, clamp), higher)\n    : Math.min(num, clamp);\n\nexport const map = (\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n) => ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype SCProps = {\n  stack?: boolean;\n  flexLabel?: boolean;\n};\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 8px 0;\n`;\n\nconst Label = styled.label<SCProps>`\n  display: flex;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n  width: 56px;\n  user-select: none;\n  ${props => (props.flexLabel === true ? 'flex: 1;' : '')}\n`;\n\nconst Content = styled.div<SCProps>`\n  display: flex;\n  ${props => (props.flexLabel !== true ? 'flex: 1;' : '')}\n  justify-content: flex-end;\n  padding: 0 8px;\n`;\n\nconst Value = styled.div<SCProps>`\n  display: flex;\n  font-family: sans-serif;\n  white-space: nowrap;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  justify-content: flex-end;\n  ${props => (props.stack ? 'flex: 1;' : '')}\n  ${props => (props.stack ? '' : 'width: 42px;')}\n`;\n\ntype BaseControlProps = {\n  label?: string;\n  flexLabel?: boolean;\n  value?: string;\n  children?: any;\n  stack?: boolean;\n  htmlFor?: any;\n};\n\nexport function BaseControl({\n  htmlFor,\n  label,\n  flexLabel,\n  value,\n  stack,\n  children,\n}: BaseControlProps) {\n  if (stack) {\n    return (\n      <div>\n        <Row>\n          <Label flexLabel={flexLabel}>{label}</Label>\n          <Value stack flexLabel={flexLabel}>\n            {value}\n          </Value>\n        </Row>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <Row>\n      <Label flexLabel={flexLabel} htmlFor={htmlFor}>\n        {label}\n      </Label>\n      <Content flexLabel={flexLabel}>{children}</Content>\n      {typeof value !== 'undefined' && <Value>{value}</Value>}\n    </Row>\n  );\n}\n","import styled from 'styled-components';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { clamp, map } from '../../utils';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsNumber } from '../../types';\n\nconst InputRange = styled.input`\n  -webkit-appearance: none;\n  width: 100%;\n  background: transparent;\n  display: inline-block;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 12px;\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.045);\n    border-radius: 10px;\n  }\n\n  &::-webkit-slider-thumb {\n    border: none;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer;\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.22);\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n\n  &:focus::-webkit-slider-runnable-track {\n    outline: none;\n  }\n`;\n\nconst PRECISION = 300;\nconst CENTER = PRECISION / 2;\n\nexport const NumberControl = ({\n  name,\n  value,\n  setValue,\n  options,\n}: ControlComponentProps<ControlOptionsNumber>) => {\n  const ref = useRef<HTMLInputElement | null>(null);\n  const stage = useRef(null);\n  const {\n    min = options.scrub ? -Infinity : 0,\n    max = options.scrub ? Infinity : Math.PI,\n  } = options;\n\n  const distance = options.distance ?? options.scrub ? 2 : max - min;\n\n  const [val, setVal] = useState(\n    options.scrub ? CENTER : map(value, min, max, 0, PRECISION)\n  );\n\n  const handleChange = useCallback(() => {\n    if (options.scrub) {\n      setVal(CENTER);\n      stage.current = null;\n    }\n  }, [options.scrub]);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (el) {\n      el.addEventListener('change', handleChange);\n    }\n    return () => {\n      if (el) {\n        el.removeEventListener('change', handleChange);\n      }\n    };\n  }, [handleChange, ref]);\n\n  useEffect(() => {\n    setVal(options.scrub ? CENTER : map(value, min, max, 0, PRECISION));\n  }, [value])\n\n  return (\n    <BaseControl label={name} value={(value || 0).toFixed(2)}>\n      <InputRange\n        ref={ref}\n        type=\"range\"\n        value={val}\n        min={0}\n        max={PRECISION}\n        onChange={e => {\n          const num = Number(e.target.value);\n          setVal(num);\n          if (stage.current === null) {\n            stage.current = value;\n          }\n          const cvalue =\n            (options.scrub ? (stage as any).current : 0) +\n            map(\n              num - (options.scrub ? CENTER : 0),\n              0,\n              PRECISION,\n              options.scrub ? 0 : min,\n              options.scrub ? distance * 2 : max\n            );\n          setValue(clamp(cvalue, min, max));\n        }}\n      />\n    </BaseControl>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BaseControl } from \"./base-control\";\nimport { ControlComponentProps, ControlOptionsBoolean } from \"../../types\";\n\nconst FakeCheckbox = styled.label`\n  height: 16px;\n  width: 16px;\n  border: 2px solid rgba(0, 0, 0, 0.065);\n  border-radius: 4px;\n  position: relative;\n  margin-top: -1px;\n  transition: ease-in-out 125ms;\n  transition-property: background-color, border-color;\n`;\n\nconst Checkbox = styled.input`\n  opacity: 0;\n  margin-right: -15px;\n  & + ${FakeCheckbox}:after {\n    position: absolute;\n    content: \"\";\n    display: inline-block;\n    height: 4px;\n    width: 8px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    left: 3px;\n    top: 4px;\n    opacity: 0;\n    transform: translate(0px, 2px) rotate(-45deg);\n    transition: ease-in-out 125ms;\n    transition-property: opacity, transform;\n  }\n  &:checked + ${FakeCheckbox}:after {\n    opacity: 1;\n    transform: translate(0px, 0px) rotate(-45deg);\n  }\n  &:checked + ${FakeCheckbox} {\n    background: rgba(0, 0, 0, 0.045);\n    border-color: rgba(0, 0, 0, 0.085);\n  }\n`;\n\nexport function BooleanControl({\n  id,\n  name,\n  value,\n  setValue\n}: ControlComponentProps<ControlOptionsBoolean>) {\n  const htmlFor = `Control${id}`;\n  return (\n    <BaseControl flexLabel label={name} htmlFor={htmlFor}>\n      <Checkbox\n        id={htmlFor}\n        type=\"checkbox\"\n        checked={value}\n        onChange={(e) => setValue(e.currentTarget.checked)}\n      />\n      <FakeCheckbox htmlFor={htmlFor} />\n    </BaseControl>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport styled from 'styled-components';\nimport { ControlComponentProps, ControlOptionsButton } from '../../types';\n\nconst Button = styled.button`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.045);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport function ButtonControl({\n  name,\n  options,\n}: ControlComponentProps<ControlOptionsButton>) {\n  return (\n    <div style={{ paddingTop: 8, paddingBottom: 8 }}>\n      <Button\n        onClick={(e: MouseEvent<HTMLButtonElement>) => {\n          if (options.onClick) {\n            options.onClick(e);\n          }\n        }}\n      >\n        {name}\n      </Button>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  AlphaPicker,\n  BlockPicker,\n  ChromePicker,\n  CirclePicker,\n  CompactPicker,\n  GithubPicker,\n  HuePicker,\n  MaterialPicker,\n  SketchPicker,\n  SliderPicker,\n  SwatchesPicker,\n  TwitterPicker,\n} from 'react-color';\nimport styled from 'styled-components';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsColor } from '../../types';\n\nconst ColorPicker = styled.div`\n  position: relative;\n\n  > div {\n    box-sizing: border-box !important;\n  }\n`;\n\nconst ColorBox = styled.div`\n  width: 32px;\n  height: 16px;\n  border: 2px solid white;\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n`;\n\nconst Picker = styled.div<{ hidden: boolean }>`\n  position: absolute;\n  top: 24px;\n  right: 0px;\n  z-index: 100;\n`;\n\nexport function ColorControl({\n  name,\n  value,\n  setValue,\n  options,\n}: ControlComponentProps<ControlOptionsColor>) {\n  const { inline = false, picker = 'chrome' } = options;\n  const [open, setOpen] = useState(false);\n  const pickerRef = useRef<HTMLDivElement>();\n  const handleClick = (e: any) => {\n    if (\n      e.target.id !== 'color-picker'\n      && pickerRef.current\n      && !pickerRef.current.contains(e.target)\n    ) {\n      setOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleClick);\n    return () => {\n      document.body.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const pickerProps: any = {\n    color: value,\n    onChange: (color: any) => setValue(color.hex),\n    disableAlpha: options.disableAlpha,\n    colors: options.colors,\n  };\n\n  let PickerElement: any = ChromePicker;\n\n  switch (picker) {\n    case 'alpha':\n      PickerElement = AlphaPicker;\n      break;\n    case 'block':\n      PickerElement = BlockPicker;\n      break;\n    case 'circle':\n      PickerElement = CirclePicker;\n      break;\n    case 'compact':\n      PickerElement = CompactPicker;\n      break;\n    case 'github':\n      PickerElement = GithubPicker;\n      break;\n    case 'hue':\n      PickerElement = HuePicker;\n      break;\n    case 'material':\n      PickerElement = MaterialPicker;\n      break;\n    case 'sketch':\n      PickerElement = SketchPicker;\n      pickerProps.presetColors = options.colors;\n      break;\n    case 'slider':\n      PickerElement = SliderPicker;\n      break;\n    case 'swatches':\n      PickerElement = SwatchesPicker;\n      break;\n    case 'twitter':\n      PickerElement = TwitterPicker;\n      break;\n  }\n\n  return (\n    <BaseControl stack={inline} label={name} flexLabel>\n      <ColorPicker>\n        {inline ? (\n          <PickerElement\n            {...pickerProps}\n            triangle={inline ? 'hide' : undefined}\n            width={268}\n          />\n        ) : (\n          <>\n            <ColorBox\n              id=\"color-picker\"\n              style={{ backgroundColor: value }}\n              onClick={() => setOpen(lastValue => !lastValue)}\n            />\n            <Picker hidden={open !== true} ref={pickerRef as any}>\n              <PickerElement {...pickerProps} />\n            </Picker>\n          </>\n        )}\n      </ColorPicker>\n    </BaseControl>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsSelect } from '../../types';\n\nconst Select = styled.select`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport function SelectControl({\n  name,\n  setValue,\n  value,\n  options,\n}: ControlComponentProps<ControlOptionsSelect>) {\n  const { items = [] } = options;\n  return (\n    <BaseControl label={name}>\n      <Select value={value} onChange={e => setValue(e.currentTarget.value)}>\n        {items.map((item: string, i: number) => (\n          <option key={i}>{item}</option>\n        ))}\n      </Select>\n    </BaseControl>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsString } from '../../types';\n\nconst Input = styled.input`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport const StringControl = React.memo(\n  ({ name, setValue, value }: ControlComponentProps<ControlOptionsString>) => {\n    return (\n      <BaseControl label={name}>\n        <Input value={value} onChange={e => setValue(e.target.value)} />\n      </BaseControl>\n    );\n  }\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsFile } from '../../types';\nimport * as THREE from 'three';\n\nconst FileInput = styled.input`\n  width: 100%;\n`;\n\nexport const FileControl = ({\n  name,\n  setValue,\n  options,\n}: ControlComponentProps<ControlOptionsFile>) => {\n  return (\n    <BaseControl label={name}>\n      <FileInput\n        type=\"file\"\n        onChange={e => {\n          const loader = options.loader ?? new THREE.FileLoader();\n          if ((loader as any).setCrossOrigin) {\n            (loader as THREE.TextureLoader).setCrossOrigin('');\n          }\n          const file = e.currentTarget.files && e.currentTarget.files[0];\n          const texture = loader.load(URL.createObjectURL(file));\n          setValue(texture);\n        }}\n      />\n    </BaseControl>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { ControlsContext } from '../contexts/controls-context';\nimport {\n  ControlType,\n  ControlOptions,\n  ControlComponentProps,\n  ControlOptionsCustom,\n} from '../types';\nimport { NumberControl } from './controls/number-control';\nimport { BooleanControl } from './controls/boolean-control';\nimport { BaseControl } from './controls/base-control';\nimport { ButtonControl } from './controls/button-control';\nimport { ColorControl } from './controls/color-control';\nimport { SelectControl } from './controls/select-control';\nimport { StringControl } from './controls/string-control';\nimport { XYPadControl } from './controls/xy-pad-control';\nimport { FileControl } from './controls/file-control';\n\nconst ControlComponents = {\n  [ControlType.NUMBER]: NumberControl,\n  [ControlType.BOOLEAN]: BooleanControl,\n  [ControlType.SELECT]: SelectControl,\n  [ControlType.COLOR]: ColorControl,\n  [ControlType.STRING]: StringControl,\n  [ControlType.BUTTON]: ButtonControl,\n  [ControlType.FILE]: FileControl,\n  [ControlType.XYPAD]: XYPadControl,\n};\n\nconst Noop = ({ name, options }: any) => (\n  <BaseControl label={name}>\"{options.type}\" not found</BaseControl>\n);\n\nexport const ControlItem = ({\n  name,\n  id,\n  value: defaultValue,\n  options,\n}: ControlComponentProps<ControlOptions>) => {\n  const context = useContext(ControlsContext);\n\n  const [value, setValue] = useState(\n    context.values.current && context.values.current.has(id)\n      ? context.values.current.get(id)\n      : defaultValue\n  );\n\n  useEffect(() => {\n    context.values.current!.set(id, value);\n  }, [context.values, id, value]);\n\n  useEffect(() => {\n    context.gui.current!.set(id, setValue);\n  }, [context.gui, id]);\n\n  const Component =\n    (options as ControlOptionsCustom).component ??\n    (ControlComponents as any)[options.type ?? ControlType.NUMBER] ??\n    Noop;\n\n  return (\n    <Component\n      id={id}\n      name={name}\n      value={value}\n      setValue={(newValue: any) => {\n        context.gui.current?.get(id)?.(newValue);\n        context.state.current?.get(id)?.(newValue);\n      }}\n      options={options}\n    />\n  );\n};\n","import React, { useRef } from 'react';\nimport { animated, useSpring, to } from '@react-spring/web';\nimport { useDrag } from 'react-use-gesture';\nimport useMeasure from 'react-use-measure';\nimport { clamp, map } from '../../utils';\nimport { BaseControl } from './base-control';\nimport { ControlComponentProps, ControlOptionsXYPad } from '../../types';\n\n// When to just show 0 instead of 0.000000012333\nconst THRESHOLD = 0.00001;\n\nexport const XYPadControl = ({\n  name,\n  value,\n  setValue,\n  options,\n}: ControlComponentProps<ControlOptionsXYPad>) => {\n  const stage = useRef(null);\n  const { distance = 1, scrub = false } = options;\n  const [ref, { width, height }] = useMeasure();\n\n  const [cursor, setCursor] = useSpring(\n    () => ({\n      from: {\n        x: value.x,\n        y: value.y,\n      },\n\n      onChange(value: any, b: any) {\n        const clampMx = b.key === 'x' ? width : height;\n        const v =\n          clamp(map(value, 0, clampMx / 2, 0, distance), -distance, distance) ||\n          0;\n        if (!scrub) {\n          setValue((prev: any) => ({\n            ...prev,\n            [b.key]: v < THRESHOLD && v > -THRESHOLD ? 0 : v,\n          }));\n        }\n      },\n    }),\n    [width, height]\n  ) as any;\n\n  const bind = useDrag(({ down, movement }) => {\n    if (down && !stage.current) {\n      stage.current = value;\n    } else if (!down) {\n      stage.current = null;\n    }\n\n    setCursor({ x: down ? movement[0] : 0, y: down ? movement[1] : 0 });\n\n    if (scrub) {\n      if (down) {\n        setValue(() => ({\n          x:\n            (stage as any).current.x +\n            map(movement[0], 0, width / 2, 0, distance),\n          y:\n            (stage as any).current.y +\n            map(movement[1], 0, height / 2, 0, distance),\n        }));\n      } else {\n        stage.current = value;\n      }\n    }\n  });\n\n  const x = cursor.x.to((n: number) => clamp(n + width / 2, 0, width));\n  const y = cursor.y.to((n: number) => clamp(n + height / 2, 0, height));\n\n  return (\n    <BaseControl\n      stack\n      label={name}\n      value={`x: ${value.x.toFixed(1)}, y: ${value.y.toFixed(1)}`}\n    >\n      <animated.svg\n        ref={ref as any}\n        style={{\n          userSelect: 'none',\n          borderRadius: 8,\n          border: '1px solid #f0f0f0',\n        }}\n        width=\"100%\"\n        height={200}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...bind()}\n      >\n        <rect fill=\"rgb(250, 250, 250)\" width=\"100%\" height=\"100%\" />\n        <animated.line x1={x} x2={x} y1={0} y2=\"100%\" stroke=\"#ccc\" />\n        <animated.line x1={0} x2=\"100%\" y1={y} y2={y} stroke=\"#ccc\" />\n        <animated.g\n          style={{\n            transform: to([x, y], (x, y) => `translate(${x}px, ${y}px)`),\n          }}\n        >\n          <circle r={8} fill=\"#ccc\" />\n          <circle r={4} fill=\"#aaa\" />\n        </animated.g>\n      </animated.svg>\n    </BaseControl>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ControlItem } from './control-item';\n\nconst Heading = styled.h2<{ open: boolean }>`\n  display: block;\n  font-family: sans-serif;\n  font-size: 13px;\n  font-weight: bold;\n  padding-left: 16px;\n  cursor: pointer;\n  position: relative;\n  user-select: none;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 8px;\n    right: 16px;\n    width: 12px;\n    height: 2px;\n    background-color: #333;\n    /* transition: transform 0.25s ease-out; */\n  }\n  &:before {\n    transform: rotate(${props => (props.open ? 0 : 90)}deg);\n  }\n\n  &:after {\n    transform: rotate(${props => (props.open ? 0 : 180)}deg);\n  }\n`;\n\nconst Container = styled.div<{ open: boolean; bg: boolean }>`\n  background: ${props => (props.bg ? '#f9f9f9' : '#fff')};\n  padding: 16px;\n  display: ${props => (props.open ? 'block' : 'none')};\n  margin-bottom: 8px;\n`;\n\nexport const ControlGroup = ({ title, controls, options = {} }: any) => {\n  const [open, setOpen] = useState(!options.defaultClosed ?? true);\n  const isDefault = title !== 'DEFAULT_GROUP';\n  return (\n    <div>\n      {isDefault && (\n        <Heading open={open} onClick={() => setOpen(o => !o)}>\n          {title}\n        </Heading>\n      )}\n      <Container open={open} bg={isDefault}>\n        {Array.from(controls).map((control: any) => (\n          <ControlItem key={`${control.id}_${control.name}`} {...control} />\n        ))}\n      </Container>\n    </div>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport { ControlsProvider, Canvas } from './controls-provider';\nimport styled from 'styled-components';\nimport { animated, useSpring, to } from '@react-spring/web';\nimport { useDrag } from 'react-use-gesture';\nimport useMeasure from 'react-use-measure';\nimport { clamp } from '../utils';\nimport { DEFAULT_GROUP } from '../types';\nimport { ControlsContext } from '../contexts/controls-context';\nimport { ControlGroup } from './control-group';\n\nconst mq = `@media only screen and (max-width: 600px)`;\n\ninterface FloatProps {\n  'data-width': number;\n  'data-anchor': ControlsAnchor | string;\n}\n\nexport enum ControlsAnchor {\n  TOP_LEFT = 'top_left',\n  TOP_RIGHT = 'top_right',\n  BOTTOM_LEFT = 'bottom_left',\n  BOTTOM_RIGHT = 'bottom_right',\n}\n\nexport interface ControlsProps {\n  /**\n   * Title to show on the controls\n   */\n  title?: string;\n  /**\n   * Collapsed by default\n   */\n  collapsed: boolean;\n  /**\n   * Array of group names as strings\n   */\n  defaultClosedGroups?: string[];\n  /**\n   * Defaults to 300\n   */\n  width?: number;\n  /**\n   * Anchor point\n   */\n  anchor?:\n    | ControlsAnchor\n    | 'top_left'\n    | 'bottom_left'\n    | 'top_right'\n    | 'bottom_right';\n  /**\n   * Styles\n   */\n  style?: any;\n}\n\nfunction posProps(positions: ControlsAnchor[]) {\n  return function posPropsFn(props: any) {\n    return positions.includes(props['data-anchor']) ? '16px' : 'auto';\n  };\n}\n\nconst Float = styled(animated.div)<FloatProps>`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  top: ${posProps([ControlsAnchor.TOP_LEFT, ControlsAnchor.TOP_RIGHT])};\n  right: ${posProps([ControlsAnchor.BOTTOM_RIGHT, ControlsAnchor.TOP_RIGHT])};\n  bottom: ${posProps([\n    ControlsAnchor.BOTTOM_RIGHT,\n    ControlsAnchor.BOTTOM_LEFT,\n  ])};\n  left: ${posProps([ControlsAnchor.TOP_LEFT, ControlsAnchor.BOTTOM_LEFT])};\n  width: ${props => props['data-width']}px;\n  border-radius: 16px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.12);\n\n  ${mq} {\n    transform: none !important;\n    flex-direction: column-reverse;\n    top: auto;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: auto;\n  }\n`;\n\nconst Header = styled(animated.div)<{ 'data-collapsed': boolean }>`\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding-left: 16px;\n  padding-right: 16px;\n  height: 42px;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: #fff;\n  cursor: move;\n  cursor: grab;\n  user-select: none;\n  background-color: #000;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-left-radius: ${props => (props['data-collapsed'] ? 0 : 8)}px;\n  border-bottom-right-radius: ${props => (props['data-collapsed'] ? 0 : 8)}px;\n  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.14);\n  ${mq} {\n    border-top-left-radius: 0px;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n`;\n\nconst CollapseIcon = styled.div<{ collapsed: boolean }>`\n  width: 30px;\n  height: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  cursor: pointer;\n  &:after {\n    content: '';\n    display: block;\n    height: 3px;\n    width: 16px;\n    background-color: white;\n  }\n  ${mq} {\n    &:before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n`;\n\nconst Items = styled(animated.div)`\n  padding-bottom: 8px;\n  overflow-y: auto;\n  max-height: calc(100vh - 42px);\n`;\n\nconst groupByGroup = (items: any): any => {\n  return Array.from(items).reduce((acc: any, item: any) => {\n    const groupName = item?.options?.group || DEFAULT_GROUP;\n    acc[groupName] = acc[groupName] || [];\n    acc[groupName].push(item);\n    return acc;\n  }, {} as { [key: string]: any });\n};\n\ninterface ControlsFn {\n  (props: ControlsProps): JSX.Element;\n  Provider: typeof ControlsProvider;\n  Canvas: typeof Canvas;\n}\n\nexport const Controls: ControlsFn = (props: ControlsProps) => {\n  const {\n    title = 'react-three-gui',\n    defaultClosedGroups = [],\n    width = 300,\n    style = {},\n    anchor = ControlsAnchor.TOP_RIGHT,\n  } = props;\n  const { controls } = useContext(ControlsContext);\n  const [collapsed, setCollapsed] = useState(props.collapsed);\n\n  const [position, setPosition] = useState([0, 0]);\n\n  const [ref, bounds] = useMeasure();\n  const [{ pos }, setPos] = useSpring(() => ({\n    pos: position,\n    onRest({ value }) {\n      setPosition(value);\n    },\n  }));\n  const left = [ControlsAnchor.TOP_LEFT, ControlsAnchor.BOTTOM_LEFT].includes(\n    anchor as any\n  );\n  const top = [ControlsAnchor.TOP_RIGHT, ControlsAnchor.TOP_LEFT].includes(\n    anchor as any\n  );\n  const bind = useDrag(\n    ({\n      movement,\n      memo = pos\n        ? (pos as any).getValue\n          ? (pos as any).getValue()\n          : (pos as any).get()\n        : 0,\n    }) => {\n      const [x, y] = [movement[0] + memo[0], movement[1] + memo[1]];\n      setPos({\n        pos: [\n          left\n            ? clamp(x, 1, window.innerWidth - width - 32)\n            : clamp(x, -window.innerWidth + width + 32, 1),\n          top\n            ? clamp(y, 1, window.innerHeight)\n            : clamp(y, -window.innerHeight + bounds.height + 32, 1),\n        ],\n      });\n      return memo;\n    }\n  );\n\n  const getGroupOptions = (groupName: string): any => {\n    return {\n      defaultClosed: defaultClosedGroups?.includes(groupName) ?? false,\n    };\n  };\n\n  const groups = groupByGroup(controls);\n\n  return (\n    <Float\n      data-width={width}\n      data-anchor={anchor}\n      ref={ref}\n      style={{\n        ...style,\n        transform: to(\n          [pos] as any,\n          ([x, y]) => `translate3d(${x}px,${y}px,0)` as any\n        ),\n      }}\n    >\n      <Header data-collapsed={collapsed} {...bind()}>\n        {title}\n        <CollapseIcon\n          collapsed={collapsed}\n          onClick={() => setCollapsed((c: boolean) => !c)}\n        />\n      </Header>\n      <Items\n        hidden={!collapsed}\n        style={{\n          maxHeight: top\n            ? to([pos] as any, ([_, y]) => `calc(100vh - ${y + 92}px)` as any)\n            : undefined,\n        }}\n      >\n        {Object.entries(groups).map(([groupName, items]: any) => (\n          <ControlGroup\n            key={groupName}\n            title={groupName}\n            controls={items}\n            options={getGroupOptions(groupName)}\n          />\n        ))}\n      </Items>\n    </Float>\n  );\n};\n\nControls.Provider = ControlsProvider;\nControls.Canvas = Canvas;\n","import { useState, useEffect, useContext } from 'react';\nimport { useSpring } from '@react-spring/three';\nimport { ControlsContext } from '../contexts/controls-context';\nimport { ControlOptions, ControlItem } from '../types';\nimport { defaultOptions, defaultValue } from '../utils';\n\nexport const useControl = (\n  name: string,\n  options: ControlOptions = defaultOptions\n) => {\n  const context = useContext(ControlsContext);\n  const [id, setId] = useState<string | null>(null);\n  let [value, setValue] = useState(defaultValue(options));\n\n  const [spring, setSpring] = useSpring(() => ({\n    value,\n    config: typeof options.spring === 'object' ? options.spring : undefined,\n  }));\n  const setSpringValue = (springValue: any) => setSpring({ value: springValue });\n\n  if (options.state) {\n    value = options.state[0];\n    setValue = options.state[1];\n  }\n\n  useEffect(() => {\n    if (context.state.current && id) {\n      if (options.spring) {\n        context.state.current.set(id, setSpringValue);\n      } else {\n        context.state.current.set(id, setValue);\n      }\n    }\n  }, [context.state, id]);\n\n  useEffect(() => {\n    const ctrl = context.addControl({\n      id: options.id,\n      name,\n      value,\n      options,\n    } as ControlItem);\n    setId(ctrl.id);\n    return () => {\n      context.removeControl(ctrl);\n    };\n  }, []);\n\n  useEffect(() => {\n    options.spring && void setSpring({ value });\n    options.onChange && void options.onChange(value);\n\n    // prevent stale gui\n    id && context.gui.current?.get(id)?.(value)\n\n  }, [options, setSpring, value]);\n\n  if (options.spring) {\n    return spring.value;\n  }\n\n  return value;\n};\n"],"names":["ControlsContext","createContext","values","current","Map","gui","state","controls","addControl","control","removeControl","withControls","CanvasEl","children","props","React","Consumer","value","Provider","ControlType","Canvas","R3FCanvas","defaultOptions","type","NUMBER","clamp","num","higher","undefined","Math","min","max","map","x1","y1","x2","y2","Row","styled","div","Label","label","flexLabel","Content","Value","stack","BaseControl","htmlFor","InputRange","input","FakeCheckbox","Checkbox","Button","button","ColorPicker","ColorBox","Picker","Select","select","Input","StringControl","memo","setValue","name","onChange","e","target","FileInput","ControlComponents","options","ref","useRef","stage","scrub","Infinity","PI","distance","useState","PRECISION","val","setVal","handleChange","useCallback","useEffect","el","addEventListener","removeEventListener","toFixed","Number","cvalue","BOOLEAN","id","checked","currentTarget","SELECT","items","item","i","key","COLOR","inline","picker","open","setOpen","pickerRef","handleClick","contains","document","body","pickerProps","color","hex","disableAlpha","colors","PickerElement","ChromePicker","AlphaPicker","BlockPicker","CirclePicker","CompactPicker","GithubPicker","HuePicker","MaterialPicker","SketchPicker","presetColors","SliderPicker","SwatchesPicker","TwitterPicker","triangle","width","style","backgroundColor","onClick","lastValue","hidden","STRING","BUTTON","paddingTop","paddingBottom","FILE","loader","THREE","setCrossOrigin","texture","load","URL","createObjectURL","files","XYPAD","useMeasure","height","useSpring","from","x","y","b","v","prev","cursor","setCursor","bind","useDrag","down","movement","to","n","animated","svg","userSelect","borderRadius","border","xmlns","fill","line","stroke","g","transform","r","Noop","ControlItem","defaultValue","context","useContext","has","get","set","Component","component","newValue","Heading","h2","Container","bg","ControlGroup","title","defaultClosed","isDefault","o","Array","ControlsAnchor","mq","posProps","positions","includes","Float","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","Header","CollapseIcon","Items","Controls","defaultClosedGroups","anchor","collapsed","setCollapsed","position","setPosition","bounds","pos","onRest","setPos","left","top","getValue","window","innerWidth","innerHeight","getGroupOptions","groupName","groups","reduce","acc","group","push","c","maxHeight","Object","entries","setControls","String","random","ctrls","ctrl","filter","setId","hasOwnProperty","config","spring","setSpring","setSpringValue","springValue","_context$gui$current","_context$gui$current$"],"mappings":"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"}